# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Dict, List, Optional, Union

from azure.core.exceptions import HttpResponseError
import msrest.serialization

from ._source_control_configuration_client_enums import *


class ErrorAdditionalInfo(msrest.serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: any
    """

    _validation = {
        'type': {'readonly': True},
        'info': {'readonly': True},
    }

    _attribute_map = {
        'type': {'key': 'type', 'type': 'str'},
        'info': {'key': 'info', 'type': 'object'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(ErrorAdditionalInfo, self).__init__(**kwargs)
        self.type = None
        self.info = None


class ErrorDetail(msrest.serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details:
     list[~azure.mgmt.kubernetesconfiguration.v2021_06_01_preview.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info:
     list[~azure.mgmt.kubernetesconfiguration.v2021_06_01_preview.models.ErrorAdditionalInfo]
    """

    _validation = {
        'code': {'readonly': True},
        'message': {'readonly': True},
        'target': {'readonly': True},
        'details': {'readonly': True},
        'additional_info': {'readonly': True},
    }

    _attribute_map = {
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
        'target': {'key': 'target', 'type': 'str'},
        'details': {'key': 'details', 'type': '[ErrorDetail]'},
        'additional_info': {'key': 'additionalInfo', 'type': '[ErrorAdditionalInfo]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(ErrorDetail, self).__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.additional_info = None


class ErrorResponse(msrest.serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).

    :param error: The error object.
    :type error: ~azure.mgmt.kubernetesconfiguration.v2021_06_01_preview.models.ErrorDetail
    """

    _attribute_map = {
        'error': {'key': 'error', 'type': 'ErrorDetail'},
    }

    def __init__(
        self,
        *,
        error: Optional["ErrorDetail"] = None,
        **kwargs
    ):
        super(ErrorResponse, self).__init__(**kwargs)
        self.error = error


class Resource(msrest.serialization.Model):
    """Common fields that are returned in the response for all Azure Resource Manager resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(Resource, self).__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None


class ProxyResource(Resource):
    """The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(ProxyResource, self).__init__(**kwargs)


class FluxConfiguration(ProxyResource):
    """The Flux Configuration object returned in Get & Put response.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Top level metadata
     https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/common-api-contracts.md#system-metadata-for-all-azure-resources.
    :vartype system_data: ~azure.mgmt.kubernetesconfiguration.v2021_06_01_preview.models.SystemData
    :param scope: Scope at which the operator will be installed. Possible values include:
     "cluster", "namespace". Default value: "cluster".
    :type scope: str or ~azure.mgmt.kubernetesconfiguration.v2021_06_01_preview.models.ScopeType
    :param namespace: The namespace to which this configuration is installed to. Maximum of 253
     lower case alphanumeric characters, hyphen and period only.
    :type namespace: str
    :param source_kind: Source Kind to pull the configuration data from. Possible values include:
     "GitRepository". Default value: "GitRepository".
    :type source_kind: str or
     ~azure.mgmt.kubernetesconfiguration.v2021_06_01_preview.models.SourceKindType
    :param suspend: Whether this configuration should suspend its reconciliation of its
     kustomizations and sources.
    :type suspend: bool
    :param git_repository: Parameters to reconcile to the GitRepository source kind type.
    :type git_repository:
     ~azure.mgmt.kubernetesconfiguration.v2021_06_01_preview.models.GitRepositoryDefinition
    :param kustomizations: Array of kustomizations used to reconcile the artifact pulled by the
     source type on the cluster.
    :type kustomizations:
     list[~azure.mgmt.kubernetesconfiguration.v2021_06_01_preview.models.KustomizationDefinition]
    :param configuration_protected_settings: Key-value pairs of protected configuration settings
     for the configuration.
    :type configuration_protected_settings: dict[str, str]
    :ivar statuses: Statuses of the Flux Kubernetes resources created by the fluxConfiguration or
     created by the managed objects provisioned by the fluxConfiguration.
    :vartype statuses: list[dict[str, any]]
    :ivar repository_public_key: Public Key associated with this fluxConfiguration (either
     generated within the cluster or provided by the user).
    :vartype repository_public_key: str
    :ivar last_synced_time: Datetime the fluxConfiguration has been synced with the Azure control
     plane.
    :vartype last_synced_time: str
    :ivar last_synced_commit: Branch and SHA of the last source commit synced with the cluster.
    :vartype last_synced_commit: str
    :ivar last_config_applied_time: Datetime the fluxConfiguration was last applied.
    :vartype last_config_applied_time: str
    :ivar sync_state: Combined status of the Flux Kubernetes resources created by the
     fluxConfiguration or created by the managed objects. Possible values include: "compliant",
     "non-compliant", "pending", "suspended", "unknown". Default value: "pending".
    :vartype sync_state: str or
     ~azure.mgmt.kubernetesconfiguration.v2021_06_01_preview.models.SyncStateType
    :ivar provisioning_state: Status of the creation of the fluxConfiguration. Possible values
     include: "Succeeded", "Failed", "Canceled", "Creating", "Updating", "Deleting".
    :vartype provisioning_state: str or
     ~azure.mgmt.kubernetesconfiguration.v2021_06_01_preview.models.ProvisioningState
    :ivar message: Error message returned to the user in the case of provisioning failure.
    :vartype message: str
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'system_data': {'readonly': True},
        'statuses': {'readonly': True},
        'repository_public_key': {'readonly': True},
        'last_synced_time': {'readonly': True},
        'last_synced_commit': {'readonly': True},
        'last_config_applied_time': {'readonly': True},
        'sync_state': {'readonly': True},
        'provisioning_state': {'readonly': True},
        'message': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'system_data': {'key': 'systemData', 'type': 'SystemData'},
        'scope': {'key': 'properties.scope', 'type': 'str'},
        'namespace': {'key': 'properties.namespace', 'type': 'str'},
        'source_kind': {'key': 'properties.sourceKind', 'type': 'str'},
        'suspend': {'key': 'properties.suspend', 'type': 'bool'},
        'git_repository': {'key': 'properties.gitRepository', 'type': 'GitRepositoryDefinition'},
        'kustomizations': {'key': 'properties.kustomizations', 'type': '[KustomizationDefinition]'},
        'configuration_protected_settings': {'key': 'properties.configurationProtectedSettings', 'type': '{str}'},
        'statuses': {'key': 'properties.statuses', 'type': '[{object}]'},
        'repository_public_key': {'key': 'properties.repositoryPublicKey', 'type': 'str'},
        'last_synced_time': {'key': 'properties.lastSyncedTime', 'type': 'str'},
        'last_synced_commit': {'key': 'properties.lastSyncedCommit', 'type': 'str'},
        'last_config_applied_time': {'key': 'properties.lastConfigAppliedTime', 'type': 'str'},
        'sync_state': {'key': 'properties.syncState', 'type': 'str'},
        'provisioning_state': {'key': 'properties.provisioningState', 'type': 'str'},
        'message': {'key': 'properties.message', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        scope: Optional[Union[str, "ScopeType"]] = "cluster",
        namespace: Optional[str] = "default",
        source_kind: Optional[Union[str, "SourceKindType"]] = "GitRepository",
        suspend: Optional[bool] = False,
        git_repository: Optional["GitRepositoryDefinition"] = None,
        kustomizations: Optional[List["KustomizationDefinition"]] = None,
        configuration_protected_settings: Optional[Dict[str, str]] = None,
        **kwargs
    ):
        super(FluxConfiguration, self).__init__(**kwargs)
        self.system_data = None
        self.scope = scope
        self.namespace = namespace
        self.source_kind = source_kind
        self.suspend = suspend
        self.git_repository = git_repository
        self.kustomizations = kustomizations
        self.configuration_protected_settings = configuration_protected_settings
        self.statuses = None
        self.repository_public_key = None
        self.last_synced_time = None
        self.last_synced_commit = None
        self.last_config_applied_time = None
        self.sync_state = None
        self.provisioning_state = None
        self.message = None


class FluxConfigurationsList(msrest.serialization.Model):
    """Result of the request to list Flux Configurations.  It contains a list of FluxConfiguration objects and a URL link to get the next set of results.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of Flux Configurations within a Kubernetes cluster.
    :vartype value:
     list[~azure.mgmt.kubernetesconfiguration.v2021_06_01_preview.models.FluxConfiguration]
    :ivar next_link: URL to get the next set of configuration objects, if any.
    :vartype next_link: str
    """

    _validation = {
        'value': {'readonly': True},
        'next_link': {'readonly': True},
    }

    _attribute_map = {
        'value': {'key': 'value', 'type': '[FluxConfiguration]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(FluxConfigurationsList, self).__init__(**kwargs)
        self.value = None
        self.next_link = None


class GitRepositoryDefinition(msrest.serialization.Model):
    """Parameters to reconcile to the GitRepository source kind type.

    :param url: The URL to sync for the flux configuration git repository.
    :type url: str
    :param timeout_in_seconds: The maximum time to attempt to reconcile the cluster git repository
     source with the remote.
    :type timeout_in_seconds: long
    :param sync_interval_in_seconds: The interval at which to re-reconcile the cluster git
     repository source with the remote.
    :type sync_interval_in_seconds: long
    :param repository_ref: The source reference for the GitRepository object.
    :type repository_ref:
     ~azure.mgmt.kubernetesconfiguration.v2021_06_01_preview.models.RepositoryRefDefinition
    :param ssh_known_hosts: Base64-encoded known_hosts value containing public SSH keys required to
     access private git repositories over SSH.
    :type ssh_known_hosts: str
    :param https_user: HTTPS username used to access private git repositories over HTTPS.
    :type https_user: str
    :param local_auth_ref: Name of a local secret on the Kubernetes cluster to use as the
     authentication secret rather than the managed or user-provided configuration secrets.
    :type local_auth_ref: str
    """

    _attribute_map = {
        'url': {'key': 'url', 'type': 'str'},
        'timeout_in_seconds': {'key': 'timeoutInSeconds', 'type': 'long'},
        'sync_interval_in_seconds': {'key': 'syncIntervalInSeconds', 'type': 'long'},
        'repository_ref': {'key': 'repositoryRef', 'type': 'RepositoryRefDefinition'},
        'ssh_known_hosts': {'key': 'sshKnownHosts', 'type': 'str'},
        'https_user': {'key': 'httpsUser', 'type': 'str'},
        'local_auth_ref': {'key': 'localAuthRef', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        url: Optional[str] = None,
        timeout_in_seconds: Optional[int] = 600,
        sync_interval_in_seconds: Optional[int] = 600,
        repository_ref: Optional["RepositoryRefDefinition"] = None,
        ssh_known_hosts: Optional[str] = None,
        https_user: Optional[str] = None,
        local_auth_ref: Optional[str] = None,
        **kwargs
    ):
        super(GitRepositoryDefinition, self).__init__(**kwargs)
        self.url = url
        self.timeout_in_seconds = timeout_in_seconds
        self.sync_interval_in_seconds = sync_interval_in_seconds
        self.repository_ref = repository_ref
        self.ssh_known_hosts = ssh_known_hosts
        self.https_user = https_user
        self.local_auth_ref = local_auth_ref


class KustomizationDefinition(msrest.serialization.Model):
    """KustomizationDefinition.

    :param name: The name of the Kustomization object to create on the cluster.
    :type name: str
    :param path: The path in the source reference to reconcile on the cluster.
    :type path: str
    :param depends_on: Specifies other Kustomizations that this Kustomization depends on. This
     Kustomization will not reconcile until all dependencies have completed their reconciliation.
    :type depends_on: list[str]
    :param timeout_in_seconds: The maximum time to attempt to reconcile the Kustomization on the
     cluster.
    :type timeout_in_seconds: long
    :param sync_interval_in_seconds: The interval at which to re-reconcile the Kustomization on the
     cluster.
    :type sync_interval_in_seconds: long
    :param retry_interval_in_seconds: The interval at which to re-reconcile the Kustomization on
     the cluster in the event of failure on reconciliation.
    :type retry_interval_in_seconds: long
    :param prune: Enable/disable garbage collections of Kubernetes objects created by this
     Kustomization.
    :type prune: bool
    :param validation: Specify whether to validate the Kubernetes objects referenced in the
     Kustomization before applying them to the cluster. Possible values include: "none", "client",
     "server". Default value: "none".
    :type validation: str or
     ~azure.mgmt.kubernetesconfiguration.v2021_06_01_preview.models.KustomizationValidationType
    :param force: Enable/disable re-creating Kubernetes resources on the cluster when patching
     fails due to an immutable field change.
    :type force: bool
    """

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'path': {'key': 'path', 'type': 'str'},
        'depends_on': {'key': 'dependsOn', 'type': '[str]'},
        'timeout_in_seconds': {'key': 'timeoutInSeconds', 'type': 'long'},
        'sync_interval_in_seconds': {'key': 'syncIntervalInSeconds', 'type': 'long'},
        'retry_interval_in_seconds': {'key': 'retryIntervalInSeconds', 'type': 'long'},
        'prune': {'key': 'prune', 'type': 'bool'},
        'validation': {'key': 'validation', 'type': 'str'},
        'force': {'key': 'force', 'type': 'bool'},
    }

    def __init__(
        self,
        *,
        name: Optional[str] = None,
        path: Optional[str] = "",
        depends_on: Optional[List[str]] = None,
        timeout_in_seconds: Optional[int] = 600,
        sync_interval_in_seconds: Optional[int] = 600,
        retry_interval_in_seconds: Optional[int] = None,
        prune: Optional[bool] = None,
        validation: Optional[Union[str, "KustomizationValidationType"]] = "none",
        force: Optional[bool] = None,
        **kwargs
    ):
        super(KustomizationDefinition, self).__init__(**kwargs)
        self.name = name
        self.path = path
        self.depends_on = depends_on
        self.timeout_in_seconds = timeout_in_seconds
        self.sync_interval_in_seconds = sync_interval_in_seconds
        self.retry_interval_in_seconds = retry_interval_in_seconds
        self.prune = prune
        self.validation = validation
        self.force = force


class OperationStatusList(msrest.serialization.Model):
    """The async operations in progress, in the cluster.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of async operations in progress, in the cluster.
    :vartype value:
     list[~azure.mgmt.kubernetesconfiguration.v2021_06_01_preview.models.OperationStatusResult]
    :ivar next_link: URL to get the next set of Operation Result objects, if any.
    :vartype next_link: str
    """

    _validation = {
        'value': {'readonly': True},
        'next_link': {'readonly': True},
    }

    _attribute_map = {
        'value': {'key': 'value', 'type': '[OperationStatusResult]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(OperationStatusList, self).__init__(**kwargs)
        self.value = None
        self.next_link = None


class OperationStatusResult(msrest.serialization.Model):
    """The current status of an async operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :param id: Fully qualified ID for the async operation.
    :type id: str
    :param name: Name of the async operation.
    :type name: str
    :param status: Required. Operation status.
    :type status: str
    :param properties: Additional information, if available.
    :type properties: dict[str, str]
    :ivar error: If present, details of the operation error.
    :vartype error: ~azure.mgmt.kubernetesconfiguration.v2021_06_01_preview.models.ErrorDetail
    """

    _validation = {
        'status': {'required': True},
        'error': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'status': {'key': 'status', 'type': 'str'},
        'properties': {'key': 'properties', 'type': '{str}'},
        'error': {'key': 'error', 'type': 'ErrorDetail'},
    }

    def __init__(
        self,
        *,
        status: str,
        id: Optional[str] = None,
        name: Optional[str] = None,
        properties: Optional[Dict[str, str]] = None,
        **kwargs
    ):
        super(OperationStatusResult, self).__init__(**kwargs)
        self.id = id
        self.name = name
        self.status = status
        self.properties = properties
        self.error = None


class RepositoryRefDefinition(msrest.serialization.Model):
    """The source reference for the GitRepository object.

    :param branch: The git repository branch name to checkout.
    :type branch: str
    :param tag: The git repository tag name to checkout. This takes precedence over branch.
    :type tag: str
    :param semver: The semver range used to match against git repository tags. This takes
     precedence over tag.
    :type semver: str
    :param commit: The commit SHA to checkout. This value must be combined with the branch name to
     be valid. This takes precedence over semver.
    :type commit: str
    """

    _attribute_map = {
        'branch': {'key': 'branch', 'type': 'str'},
        'tag': {'key': 'tag', 'type': 'str'},
        'semver': {'key': 'semver', 'type': 'str'},
        'commit': {'key': 'commit', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        branch: Optional[str] = None,
        tag: Optional[str] = None,
        semver: Optional[str] = None,
        commit: Optional[str] = None,
        **kwargs
    ):
        super(RepositoryRefDefinition, self).__init__(**kwargs)
        self.branch = branch
        self.tag = tag
        self.semver = semver
        self.commit = commit


class ResourceProviderOperation(msrest.serialization.Model):
    """Supported operation of this resource provider.

    Variables are only populated by the server, and will be ignored when sending a request.

    :param name: Operation name, in format of {provider}/{resource}/{operation}.
    :type name: str
    :param display: Display metadata associated with the operation.
    :type display:
     ~azure.mgmt.kubernetesconfiguration.v2021_06_01_preview.models.ResourceProviderOperationDisplay
    :param origin: The intended executor of the operation;governs the display of the operation in
     the RBAC UX and the audit logs UX.
    :type origin: str
    :ivar is_data_action: The flag that indicates whether the operation applies to data plane.
    :vartype is_data_action: bool
    """

    _validation = {
        'is_data_action': {'readonly': True},
    }

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'display': {'key': 'display', 'type': 'ResourceProviderOperationDisplay'},
        'origin': {'key': 'origin', 'type': 'str'},
        'is_data_action': {'key': 'isDataAction', 'type': 'bool'},
    }

    def __init__(
        self,
        *,
        name: Optional[str] = None,
        display: Optional["ResourceProviderOperationDisplay"] = None,
        origin: Optional[str] = None,
        **kwargs
    ):
        super(ResourceProviderOperation, self).__init__(**kwargs)
        self.name = name
        self.display = display
        self.origin = origin
        self.is_data_action = None


class ResourceProviderOperationDisplay(msrest.serialization.Model):
    """Display metadata associated with the operation.

    :param provider: Resource provider: Microsoft KubernetesConfiguration.
    :type provider: str
    :param resource: Resource on which the operation is performed.
    :type resource: str
    :param operation: Type of operation: get, read, delete, etc.
    :type operation: str
    :param description: Description of this operation.
    :type description: str
    """

    _attribute_map = {
        'provider': {'key': 'provider', 'type': 'str'},
        'resource': {'key': 'resource', 'type': 'str'},
        'operation': {'key': 'operation', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        provider: Optional[str] = None,
        resource: Optional[str] = None,
        operation: Optional[str] = None,
        description: Optional[str] = None,
        **kwargs
    ):
        super(ResourceProviderOperationDisplay, self).__init__(**kwargs)
        self.provider = provider
        self.resource = resource
        self.operation = operation
        self.description = description


class ResourceProviderOperationList(msrest.serialization.Model):
    """Result of the request to list operations.

    Variables are only populated by the server, and will be ignored when sending a request.

    :param value: List of operations supported by this resource provider.
    :type value:
     list[~azure.mgmt.kubernetesconfiguration.v2021_06_01_preview.models.ResourceProviderOperation]
    :ivar next_link: URL to the next set of results, if any.
    :vartype next_link: str
    """

    _validation = {
        'next_link': {'readonly': True},
    }

    _attribute_map = {
        'value': {'key': 'value', 'type': '[ResourceProviderOperation]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["ResourceProviderOperation"]] = None,
        **kwargs
    ):
        super(ResourceProviderOperationList, self).__init__(**kwargs)
        self.value = value
        self.next_link = None


class SystemData(msrest.serialization.Model):
    """Metadata pertaining to creation and last modification of the resource.

    :param created_by: The identity that created the resource.
    :type created_by: str
    :param created_by_type: The type of identity that created the resource. Possible values
     include: "User", "Application", "ManagedIdentity", "Key".
    :type created_by_type: str or
     ~azure.mgmt.kubernetesconfiguration.v2021_06_01_preview.models.CreatedByType
    :param created_at: The timestamp of resource creation (UTC).
    :type created_at: ~datetime.datetime
    :param last_modified_by: The identity that last modified the resource.
    :type last_modified_by: str
    :param last_modified_by_type: The type of identity that last modified the resource. Possible
     values include: "User", "Application", "ManagedIdentity", "Key".
    :type last_modified_by_type: str or
     ~azure.mgmt.kubernetesconfiguration.v2021_06_01_preview.models.CreatedByType
    :param last_modified_at: The timestamp of resource last modification (UTC).
    :type last_modified_at: ~datetime.datetime
    """

    _attribute_map = {
        'created_by': {'key': 'createdBy', 'type': 'str'},
        'created_by_type': {'key': 'createdByType', 'type': 'str'},
        'created_at': {'key': 'createdAt', 'type': 'iso-8601'},
        'last_modified_by': {'key': 'lastModifiedBy', 'type': 'str'},
        'last_modified_by_type': {'key': 'lastModifiedByType', 'type': 'str'},
        'last_modified_at': {'key': 'lastModifiedAt', 'type': 'iso-8601'},
    }

    def __init__(
        self,
        *,
        created_by: Optional[str] = None,
        created_by_type: Optional[Union[str, "CreatedByType"]] = None,
        created_at: Optional[datetime.datetime] = None,
        last_modified_by: Optional[str] = None,
        last_modified_by_type: Optional[Union[str, "CreatedByType"]] = None,
        last_modified_at: Optional[datetime.datetime] = None,
        **kwargs
    ):
        super(SystemData, self).__init__(**kwargs)
        self.created_by = created_by
        self.created_by_type = created_by_type
        self.created_at = created_at
        self.last_modified_by = last_modified_by
        self.last_modified_by_type = last_modified_by_type
        self.last_modified_at = last_modified_at
